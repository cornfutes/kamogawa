{{define "javascript"}}
<script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script>
<script>
  // Only show one dropdown at a time.
  const dropdowns = document.querySelectorAll(".dropdown");
  dropdowns.forEach((dropdown) => {
    dropdown.addEventListener("click", (e) => {
      e.stopPropagation();
      dropdowns.forEach((c) => c.classList.remove("is-active"));
      dropdown.classList.add("is-active");
    });
  });

  $$ = i => document.getElementById(i);
  l = (el, ev, f) => {
    if (el) el.addEventListener(ev, f);
  };
  w = u => window.location.href = u;
  s = q => w(`/search?q=${encodeURI(q)}`)
  elPD = $$('profile-dropdown')

  l($$('search-bar-input'), 'focus', e => {
    $$('top-session-links').classList.add('ninja');
  });
  l($$('search-bar-input'), 'blur', e => {
    $$('top-session-links').classList.remove('ninja');
  });
  l($$('search-bar-input'), 'keyup', e => {
    if (e.code == 'Enter') {
      e.preventDefault();
      s(e.target.value);
    }
  });

  // l($$('profile-icon'), 'click', e =>
  //   elPD.classList.contains('is-active') ? elPD.classList.remove('is-active') : elPD.classList.add('is-active')
  // );

  elSearchFilter = $$('search-filter')
  elSearchCount = $$('search-count')
  let showSearchCount = true;
  l($$('search-tools'), 'click', e => {
    if (showSearchCount) {
      elSearchFilter.classList.remove('ninja');
      elSearchCount.classList.add('ninja');
    } else {
      elSearchFilter.classList.add('ninja');
      elSearchCount.classList.remove('ninja');
    }
    showSearchCount = !showSearchCount;
  });

  elExportYes = $$('export-csv-yes')
  elExportNo = $$('export-csv-no')
  let exportable = false;
  l($$("export-checkbox-projects"), 'change', e => {
    exportable = e.target.checked;
    if (exportable) {
      elExportYes.classList.remove('ninja');
      elExportNo.classList.add('ninja');
    } else {
      elExportYes.classList.add('ninja');
      elExportNo.classList.remove('ninja');
    }
  });

  $(document).click(function (e) {
    var container = $(".status-button");
    var dd = $(".dropdown");
    if (!container.is(e.target) && container.has(e.target).length === 0) {
      dd.removeClass("is-active");
    }
  });

  // Toggle dark overlay on the content section.
  $(function () {
    $(".dropdown").on("click", function (e) {
      $(".content-wrapper").addClass("overlay");
      e.stopPropagation();
    });
    $(document).on("click", function (e) {
      if ($(e.target).is(".dropdown") === false) {
        $(".content-wrapper").removeClass("overlay");
      }
    });
  });

  $(function () {
    $(".status-button:not(.open)").on("click", function (e) {
      $(".overlay-app").addClass("is-active");
    });
    $(".pop-up .close").click(function () {
      $(".overlay-app").removeClass("is-active");
    });
  });

  $(".status-button:not(.open)").click(function () {
    $(".pop-up").addClass("visible");
  });

  $(".pop-up .close").click(function () {
    $(".pop-up").removeClass("visible");
  });


  l($$('lightswitch'), 'click', () => {
    const isLight = document.body.classList.contains('light-mode');
    document.body.classList.toggle('light-mode');
    console.log(isLight);
    localStorage.setItem('kubrick-daytime', !isLight);
  });
  if (localStorage.getItem('kubrick-daytime') == 'true') {
    document.body.classList.add('light-mode');
  }

  l($$('search-filter-date-placeholder'), 'click', e => {
    console.log('here');
    $$('search-filter-date-dropdown').classList.remove('ninja');
  });
  l($$('search-filter-date-active'), 'click', e => {
    $$('search-filter-date-dropdown').classList.add('ninja');
  });

  window.history.replaceState({}, '', window.location.href);

  const elSlot = 'frame-content';
  // Sonic.js
  var $onic = url => {
    return fetch(url)
      .then(res => res.text())
      .then(res => {
        $$(elSlot).innerHTML = new window.DOMParser().parseFromString(res, 'text/html').getElementById('frame-content').innerHTML;
      });
  };
  var rings = document.querySelectorAll('[data-sonic]');
  var i = rings.length;
  while (i--) l(rings[i], 'click', e => {
    e.preventDefault();
    // TODO: handle anchors.
    if (e.target.href != window.location.href) $onic(e.target.href).then(_ => window.history.pushState({}, '', e.target.href));
  });
  // TODO: restore scroll state.
  l(window, 'popstate', e => e.state && $onic(window.location.href));
</script>
{{end}}